rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    function isSignedIn() {
      return request.auth != null;
    }

    // Allow authenticated users to read and write their own data
    match /users/{userId} {
      allow read: if isSignedIn();  // Allow all authenticated users to read user data for leaderboard
      allow write: if isSignedIn() && request.auth.uid == userId;
    }

    // Allow authenticated users to read and write only their own verses
    match /verses/{verseId} {
      allow read, write: if isSignedIn() && request.auth.uid == resource.data.userId;
      allow create: if isSignedIn() && request.auth.uid == request.resource.data.userId;
    }

    // Allow all authenticated users to read public library verses
    // but only the owner can edit their contributed verses
    match /publicLibrary/{verseId} {
      allow read: if isSignedIn();
      allow create: if isSignedIn() && request.auth.uid == request.resource.data.contributedBy;
      allow update, delete: if isSignedIn() && request.auth.uid == resource.data.contributedBy;
    }

    // Allow authenticated users to read and write translations
    match /translations/{translationId} {
      allow read: if isSignedIn();
      allow write: if isSignedIn();
    }

    // Allow authenticated users to read and write books
    match /books/{bookId} {
      allow read: if isSignedIn();
      allow write: if isSignedIn();
    }

    // Allow authenticated users to read and write modules
    match /modules/{moduleId} {
      allow read: if isSignedIn();
      allow write: if isSignedIn();
    }

    // Allow authenticated users to read and write user modules
    match /userModules/{userModuleId} {
      allow read: if isSignedIn();
      allow write: if isSignedIn();
    }

    // Allow users to manage their rehearsal schedules
    match /rehearsals/{rehearsalId} {
      allow read: if isSignedIn() && 
                  (resource == null || resource.data.userId == request.auth.uid);
      allow create: if isSignedIn() && 
                    request.resource.data.userId == request.auth.uid;
      allow update: if isSignedIn() && 
                    resource.data.userId == request.auth.uid;
      allow delete: if isSignedIn() && 
                    resource.data.userId == request.auth.uid;
    }
  }
}